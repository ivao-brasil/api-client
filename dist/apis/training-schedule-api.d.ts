/**
 * IVAO Brasil
 * API pÃºblica da IVAO Brasil
 *
 * OpenAPI spec version: 1.0.0
 * Contact: br-web@ivao.aero
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { PaginatedTrainingSessions } from '../models';
import { TrainingSession } from '../models';
/**
 * TrainingScheduleApi - axios parameter creator
 * @export
 */
export declare const TrainingScheduleApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Returns a paginated list of Training Sessions
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {string} [occurrenceDateBefore]
     * @param {string} [occurrenceDateAfter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trainingScheduleSessionsGet: (offset?: number, limit?: number, occurrenceDateBefore?: string, occurrenceDateAfter?: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a Training Session by ID.
     * @param {number} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trainingScheduleSessionsIdGet: (id: number, options?: any) => Promise<RequestArgs>;
};
/**
 * TrainingScheduleApi - functional programming interface
 * @export
 */
export declare const TrainingScheduleApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Returns a paginated list of Training Sessions
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {string} [occurrenceDateBefore]
     * @param {string} [occurrenceDateAfter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trainingScheduleSessionsGet(offset?: number, limit?: number, occurrenceDateBefore?: string, occurrenceDateAfter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedTrainingSessions>>;
    /**
     *
     * @summary Get a Training Session by ID.
     * @param {number} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trainingScheduleSessionsIdGet(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrainingSession>>;
};
/**
 * TrainingScheduleApi - factory interface
 * @export
 */
export declare const TrainingScheduleApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Returns a paginated list of Training Sessions
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {string} [occurrenceDateBefore]
     * @param {string} [occurrenceDateAfter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trainingScheduleSessionsGet(offset?: number, limit?: number, occurrenceDateBefore?: string, occurrenceDateAfter?: string, options?: any): AxiosPromise<PaginatedTrainingSessions>;
    /**
     *
     * @summary Get a Training Session by ID.
     * @param {number} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trainingScheduleSessionsIdGet(id: number, options?: any): AxiosPromise<TrainingSession>;
};
/**
 * TrainingScheduleApi - object-oriented interface
 * @export
 * @class TrainingScheduleApi
 * @extends {BaseAPI}
 */
export declare class TrainingScheduleApi extends BaseAPI {
    /**
     *
     * @summary Returns a paginated list of Training Sessions
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {string} [occurrenceDateBefore]
     * @param {string} [occurrenceDateAfter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrainingScheduleApi
     */
    trainingScheduleSessionsGet(offset?: number, limit?: number, occurrenceDateBefore?: string, occurrenceDateAfter?: string, options?: any): Promise<import("axios").AxiosResponse<PaginatedTrainingSessions>>;
    /**
     *
     * @summary Get a Training Session by ID.
     * @param {number} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrainingScheduleApi
     */
    trainingScheduleSessionsIdGet(id: number, options?: any): Promise<import("axios").AxiosResponse<TrainingSession>>;
}
